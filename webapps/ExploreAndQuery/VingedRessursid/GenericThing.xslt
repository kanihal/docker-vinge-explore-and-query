<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Basic Edition 2013 sp1 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:altova="http://www.altova.com" xmlns:altovaext="http://www.altova.com/xslt-extensions" xmlns:clitype="clitype" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:iso4217="http://www.xbrl.org/2003/iso4217" xmlns:ix="http://www.xbrl.org/2008/inlineXBRL" xmlns:java="java" xmlns:link="http://www.xbrl.org/2003/linkbase" xmlns:sps="http://www.altova.com/StyleVision/user-xpath-functions" xmlns:xbrldi="http://xbrl.org/2006/xbrldi" xmlns:xbrli="http://www.xbrl.org/2003/instance" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" exclude-result-prefixes="altova altovaext clitype fn iso4217 ix java link sps xbrldi xbrli xlink xs xsi">
	<xsl:output version="5.0" method="html" indent="no" encoding="UTF-8"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="altova:nPxPerIn" select="96"/>
	<xsl:template match="/">
		<html>
			<head>
				<title/>
				<meta name="generator" content="Altova StyleVision Basic Edition 2013 sp1 (http://www.altova.com)"/>
				<meta http-equiv="X-UA-Compatible" content="IE=9"/>
				<style type="text/css">
					<xsl:comment>@import  url("css/style.css");</xsl:comment>
				</style>
				<xsl:comment>[if IE]&gt;&lt;STYLE type=&quot;text/css&quot;&gt;.altova-rotate-left-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3)} .altova-rotate-right-textbox{filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1)} &lt;/STYLE&gt;&lt;![endif]</xsl:comment>
				<xsl:comment>[if !IE]&gt;&lt;!</xsl:comment>
				<style type="text/css">.altova-rotate-left-textbox{-webkit-transform: rotate(-90deg) translate(-100%, 0%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(-90deg) translate(-100%, 0%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(-90deg) translate(-100%, 0%); -ms-transform-origin: 0% 0%;}.altova-rotate-right-textbox{-webkit-transform: rotate(90deg) translate(0%, -100%); -webkit-transform-origin: 0% 0%;-moz-transform: rotate(90deg) translate(0%, -100%); -moz-transform-origin: 0% 0%;-ms-transform: rotate(90deg) translate(0%, -100%); -ms-transform-origin: 0% 0%;}</style>
				<xsl:comment>&lt;![endif]</xsl:comment>
				<style type="text/css">@page { margin-left:0.6in; margin-right:0.6in; margin-top:0.79in; margin-bottom:0.79in } @media print { br.altova-page-break { page-break-before: always; } }</style>
			</head>
			<body>
				<br/>
				<div id="results-container">
					<span style="font-family:Verdana; font-size:medium; ">
						<xsl:text>_HOME_</xsl:text>
					</span>
					<span>
						<xsl:text>&#160; </xsl:text>
					</span>
					<span style="color:gray; font-family:Verdana; font-size:small; ">
						<xsl:text>_NAV_GEN_</xsl:text>
					</span>
					<span>
						<xsl:text>&#160;</xsl:text>
					</span>
					<span style="font-family:Verdana; font-size:medium; ">
						<xsl:text>_NAV_GRAPH_</xsl:text>
					</span>
					<br/>
					<table border="0" width="100%">
						<xsl:variable name="altova:CurrContextGrid_0" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; ">
									<span style="color:green; font-family:Verdana; font-size:small; font-style:italic; font-weight:normal; ">
										<xsl:text>_OPTIONAL_</xsl:text>
									</span>
								</td>
								<td>
									<span style="color:green; font-family:Verdana; font-size:small; font-style:italic; font-weight:normal; ">
										<xsl:text>_MINUS_</xsl:text>
									</span>
								</td>
							</tr>
						</tbody>
					</table>
					<span style="color:green; font-family:Verdana; font-size:small; font-style:italic; font-weight:normal; ">
						<xsl:text> Node Filter:</xsl:text>
					</span>
					<span style="font-family:Verdana; font-size:small; ">
						<xsl:text> _CURRENT_FILTER_</xsl:text>
					</span>
					<span>
						<xsl:text>_FACET_FILTER_</xsl:text>
					</span>
					<hr/>
					<span style="color:green; font-family:Verdana; font-size:small; font-style:italic; font-weight:normal; ">
						<xsl:text>Graph Filter:</xsl:text>
					</span>
					<span style="font-family:Verdana; font-size:small; ">
						<xsl:text>_CURRENT_GRAPH_FILTER_</xsl:text>
					</span>
					<span>
						<xsl:text>&#160;</xsl:text>
					</span>
					<hr style="color:green; "/>
					<table width="100%">
						<xsl:variable name="altova:CurrContextGrid_1" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; ">
									<span style="font-family:Verdana; font-size:medium; font-weight:bold; ">
										<xsl:text>The Thing</xsl:text>
									</span>
									<span style="font-family:Verdana; font-size:medium; font-weight:normal; ">
										<xsl:text> (subject)</xsl:text>
									</span>
								</td>
								<td style="width:625px; ">
									<xsl:for-each select="$XML">
										<xsl:for-each select="Thing">
											<xsl:choose>
												<xsl:when test="contains( @deref_uri ,  &apos;http&apos; )">
													<a target="_blank">
														<xsl:choose>
															<xsl:when test="not(string(@deref_uri))">
																<xsl:attribute name="href">
																	<xsl:text>#</xsl:text>
																</xsl:attribute>
															</xsl:when>
															<xsl:when test="substring(string(@deref_uri), 1, 1) = '#'">
																<xsl:attribute name="href">
																	<xsl:value-of select="@deref_uri"/>
																</xsl:attribute>
															</xsl:when>
															<xsl:otherwise>
																<xsl:attribute name="href">
																	<xsl:if test="substring(string(@deref_uri), 2, 1) = ':'">
																		<xsl:text>file:///</xsl:text>
																	</xsl:if>
																	<xsl:value-of select="translate(string(@deref_uri), '&#x5c;', '/')"/>
																</xsl:attribute>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:for-each select="@name">
															<span style="color:gray; font-family:Verdana; font-size:medium; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
													</a>
												</xsl:when>
												<xsl:otherwise>
													<xsl:for-each select="@name">
														<span style="color:gray; font-family:Verdana; font-size:medium; ">
															<xsl:value-of select="string(.)"/>
														</span>
													</xsl:for-each>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:for-each>
									</xsl:for-each>
								</td>
							</tr>
							<tr>
								<td style="width:33%; ">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</td>
								<td style="width:625px; "/>
							</tr>
						</tbody>
					</table>
					<xsl:if test="count(Thing/Types/Type) &gt; 3">
						<button class="button_4" id="types_showhide" onclick="toggle( &apos;types_showhide&apos;,&apos;div_types&apos;, &apos;Show Types&apos;, &apos;Hide Types&apos; )">
							<span>
								<xsl:text>Hide Types</xsl:text>
							</span>
						</button>
					</xsl:if>
					<div style="display:block; " id="div_types">
						<table style="font-family:Verdana; font-size:medium; " width="100%">
							<xsl:variable name="altova:CurrContextGrid_2" select="."/>
							<tbody>
								<xsl:for-each select="$XML">
									<xsl:for-each select="Thing">
										<xsl:for-each select="Types">
											<xsl:for-each select="Type">
												<tr style="background-color:#f9f9f9; ">
													<td style="width:33%; ">
														<span style="font-family:Verdana; font-size:small; ">
															<xsl:text>type</xsl:text>
														</span>
													</td>
													<td>
														<a>
															<xsl:choose>
																<xsl:when test="not(string(concat(&apos;describe?&apos;,@uri)))">
																	<xsl:attribute name="href">
																		<xsl:text>#</xsl:text>
																	</xsl:attribute>
																</xsl:when>
																<xsl:when test="substring(string(concat(&apos;describe?&apos;,@uri)), 1, 1) = '#'">
																	<xsl:attribute name="href">
																		<xsl:value-of select="concat(&apos;describe?&apos;,@uri)"/>
																	</xsl:attribute>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:attribute name="href">
																		<xsl:if test="substring(string(concat(&apos;describe?&apos;,@uri)), 2, 1) = ':'">
																			<xsl:text>file:///</xsl:text>
																		</xsl:if>
																		<xsl:value-of select="translate(string(concat(&apos;describe?&apos;,@uri)), '&#x5c;', '/')"/>
																	</xsl:attribute>
																</xsl:otherwise>
															</xsl:choose>
															<xsl:for-each select="@name">
																<span style="font-family:Verdana; font-size:small; ">
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</a>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@ns">
															<span style="color:silver; font-family:Verdana; font-size:xx-small; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="@label">
															<span>
																<xsl:text>(</xsl:text>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:value-of select="string(.)"/>
															</span>
															<span>
																<xsl:text>)</xsl:text>
															</span>
														</xsl:for-each>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:if test="@source != &quot;&quot;">
															<span style="font-family:Verdana; font-size:xx-small; ">
																<xsl:text>from </xsl:text>
															</span>
															<xsl:for-each select="@source">
																<span style="color:green; font-family:Verdana; font-size:x-small; ">
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</xsl:if>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<a style="color:silver; " title="Add this Type to Navigation Map without navigating but staying with this Thing">
															<xsl:choose>
																<xsl:when test="not(string(concat(&apos;visualize/navmapadd?&apos;,@uri)))">
																	<xsl:attribute name="href">
																		<xsl:text>#</xsl:text>
																	</xsl:attribute>
																</xsl:when>
																<xsl:when test="substring(string(concat(&apos;visualize/navmapadd?&apos;,@uri)), 1, 1) = '#'">
																	<xsl:attribute name="href">
																		<xsl:value-of select="concat(&apos;visualize/navmapadd?&apos;,@uri)"/>
																	</xsl:attribute>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:attribute name="href">
																		<xsl:if test="substring(string(concat(&apos;visualize/navmapadd?&apos;,@uri)), 2, 1) = ':'">
																			<xsl:text>file:///</xsl:text>
																		</xsl:if>
																		<xsl:value-of select="translate(string(concat(&apos;visualize/navmapadd?&apos;,@uri)), '&#x5c;', '/')"/>
																	</xsl:attribute>
																</xsl:otherwise>
															</xsl:choose>
															<span>
																<xsl:text> (+) </xsl:text>
															</span>
														</a>
													</td>
												</tr>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</div>
					<table width="100%">
						<xsl:variable name="altova:CurrContextGrid_3" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; " valign="top">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</td>
								<td/>
							</tr>
							<tr>
								<td style="width:33%; " valign="top">
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Attribute</xsl:text>
									</span>
								</td>
								<td>
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Value</xsl:text>
									</span>
								</td>
							</tr>
						</tbody>
					</table>
					<hr/>
					<button class="button_4" id="attr_showhide" onclick="toggle( &apos;attr_showhide&apos;,&apos;div_attr&apos;, &apos;Expand&apos;, &apos;Collapse&apos; )">
						<span>
							<xsl:text>Collapse</xsl:text>
						</span>
					</button>
					<div style="display:block; " id="div_attr">
						<table style="color:silver; font-family:Verdana; font-size:medium; " width="100%">
							<xsl:variable name="altova:CurrContextGrid_4" select="."/>
							<tbody>
								<xsl:for-each select="$XML">
									<xsl:for-each select="Thing">
										<xsl:for-each select="DataProperties">
											<xsl:for-each select="DataProperty">
												<tr style="background-color:#f9f9f9; ">
													<td style="width:33%; " valign="top">
														<a title="aaa">
															<xsl:choose>
																<xsl:when test="not(string(concat(&apos;describe?uri=&apos;,@uri)))">
																	<xsl:attribute name="href">
																		<xsl:text>#</xsl:text>
																	</xsl:attribute>
																</xsl:when>
																<xsl:when test="substring(string(concat(&apos;describe?uri=&apos;,@uri)), 1, 1) = '#'">
																	<xsl:attribute name="href">
																		<xsl:value-of select="concat(&apos;describe?uri=&apos;,@uri)"/>
																	</xsl:attribute>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:attribute name="href">
																		<xsl:if test="substring(string(concat(&apos;describe?uri=&apos;,@uri)), 2, 1) = ':'">
																			<xsl:text>file:///</xsl:text>
																		</xsl:if>
																		<xsl:value-of select="translate(string(concat(&apos;describe?uri=&apos;,@uri)), '&#x5c;', '/')"/>
																	</xsl:attribute>
																</xsl:otherwise>
															</xsl:choose>
															<xsl:for-each select="@name">
																<span style="font-family:Verdana; font-size:small; ">
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</a>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@ns">
															<span style="font-family:Verdana; font-size:xx-small; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@label">
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:text>(</xsl:text>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:value-of select="string(.)"/>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:text>)</xsl:text>
															</span>
														</xsl:for-each>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@source">
															<span style="font-family:Verdana; font-size:x-small; ">
																<xsl:text> from</xsl:text>
															</span>
															<span>
																<xsl:text>&#160;</xsl:text>
															</span>
															<span style="color:green; font-family:Verdana; font-size:x-small; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
														<a style="color:silver; " title="Add this Attribute to Navigation Map without navigating but staying with this Thing">
															<xsl:choose>
																<xsl:when test="not(string(concat(&apos;visualize/navmapadd?uri=&apos;,@uri)))">
																	<xsl:attribute name="href">
																		<xsl:text>#</xsl:text>
																	</xsl:attribute>
																</xsl:when>
																<xsl:when test="substring(string(concat(&apos;visualize/navmapadd?uri=&apos;,@uri)), 1, 1) = '#'">
																	<xsl:attribute name="href">
																		<xsl:value-of select="concat(&apos;visualize/navmapadd?uri=&apos;,@uri)"/>
																	</xsl:attribute>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:attribute name="href">
																		<xsl:if test="substring(string(concat(&apos;visualize/navmapadd?uri=&apos;,@uri)), 2, 1) = ':'">
																			<xsl:text>file:///</xsl:text>
																		</xsl:if>
																		<xsl:value-of select="translate(string(concat(&apos;visualize/navmapadd?uri=&apos;,@uri)), '&#x5c;', '/')"/>
																	</xsl:attribute>
																</xsl:otherwise>
															</xsl:choose>
															<span>
																<xsl:text> (+) </xsl:text>
															</span>
														</a>
													</td>
													<td>
														<xsl:if test="count(Object) &gt; 1">
															<button class="button_4">
																<span id="showatrid" onclick="toggle( &apos;showatrid&apos;,&apos;divvalid&apos;, &apos;&gt; 1 show&apos;, &apos;hide&apos; )">
																	<xsl:text>&gt; 1 show</xsl:text>
																</span>
															</button>
														</xsl:if>
														<xsl:choose>
															<xsl:when test="count(Object) &gt; 1">
																<div style="display:none; " id="divvalid">
																	<xsl:if test="count(Object) &gt; 1">
																		<table>
																			<xsl:variable name="altova:CurrContextGrid_5" select="."/>
																			<tbody>
																				<xsl:for-each select="Object">
																					<tr>
																						<td style="color:brown; font-family:Verdana; font-size:small; ">
																							<xsl:if test="starts-with(  .  , &apos;http&apos; ) = boolean(false)">
																								<div class="more">
																									<xsl:apply-templates/>
																								</div>
																							</xsl:if>
																							<xsl:if test="starts-with(  .  , &apos;http&apos; )">
																								<a>
																									<xsl:choose>
																										<xsl:when test="not(string(.))">
																											<xsl:attribute name="href">
																												<xsl:text>#</xsl:text>
																											</xsl:attribute>
																										</xsl:when>
																										<xsl:when test="substring(string(.), 1, 1) = '#'">
																											<xsl:attribute name="href">
																												<xsl:value-of select="."/>
																											</xsl:attribute>
																										</xsl:when>
																										<xsl:otherwise>
																											<xsl:attribute name="href">
																												<xsl:if test="substring(string(.), 2, 1) = ':'">
																													<xsl:text>file:///</xsl:text>
																												</xsl:if>
																												<xsl:value-of select="translate(string(.), '&#x5c;', '/')"/>
																											</xsl:attribute>
																										</xsl:otherwise>
																									</xsl:choose>
																									<span style="font-family:Verdana; font-size:small; ">
																										<xsl:apply-templates/>
																									</span>
																									<span>
																										<xsl:text>&#160;</xsl:text>
																									</span>
																								</a>
																							</xsl:if>
																							<xsl:for-each select="@unit">
																								<span style="font-family:Verdana; font-size:small; ">
																									<xsl:text>&#160;</xsl:text>
																								</span>
																								<span style="font-family:Verdana; font-size:small; ">
																									<xsl:value-of select="string(.)"/>
																								</span>
																								<span>
																									<xsl:text>&#160;</xsl:text>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																	</xsl:if>
																</div>
															</xsl:when>
															<xsl:otherwise>
																<xsl:if test="count(Object) &gt; 1">
																	<table>
																		<xsl:variable name="altova:CurrContextGrid_5" select="."/>
																		<tbody>
																			<xsl:for-each select="Object">
																				<tr>
																					<td style="color:brown; font-family:Verdana; font-size:small; ">
																						<xsl:if test="starts-with(  .  , &apos;http&apos; ) = boolean(false)">
																							<div class="more">
																								<xsl:apply-templates/>
																							</div>
																						</xsl:if>
																						<xsl:if test="starts-with(  .  , &apos;http&apos; )">
																							<a>
																								<xsl:choose>
																									<xsl:when test="not(string(.))">
																										<xsl:attribute name="href">
																											<xsl:text>#</xsl:text>
																										</xsl:attribute>
																									</xsl:when>
																									<xsl:when test="substring(string(.), 1, 1) = '#'">
																										<xsl:attribute name="href">
																											<xsl:value-of select="."/>
																										</xsl:attribute>
																									</xsl:when>
																									<xsl:otherwise>
																										<xsl:attribute name="href">
																											<xsl:if test="substring(string(.), 2, 1) = ':'">
																												<xsl:text>file:///</xsl:text>
																											</xsl:if>
																											<xsl:value-of select="translate(string(.), '&#x5c;', '/')"/>
																										</xsl:attribute>
																									</xsl:otherwise>
																								</xsl:choose>
																								<span style="font-family:Verdana; font-size:small; ">
																									<xsl:apply-templates/>
																								</span>
																								<span>
																									<xsl:text>&#160;</xsl:text>
																								</span>
																							</a>
																						</xsl:if>
																						<xsl:for-each select="@unit">
																							<span style="font-family:Verdana; font-size:small; ">
																								<xsl:text>&#160;</xsl:text>
																							</span>
																							<span style="font-family:Verdana; font-size:small; ">
																								<xsl:value-of select="string(.)"/>
																							</span>
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																						</xsl:for-each>
																					</td>
																				</tr>
																			</xsl:for-each>
																		</tbody>
																	</table>
																</xsl:if>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:if test="count(Object) = 1">
															<table>
																<xsl:variable name="altova:CurrContextGrid_6" select="."/>
																<tbody>
																	<xsl:for-each select="Object">
																		<tr>
																			<td style="color:brown; font-family:Verdana; font-size:small; ">
																				<xsl:if test="starts-with(  .  , &apos;http&apos; ) = boolean(false)">
																					<div class="more">
																						<xsl:apply-templates/>
																					</div>
																				</xsl:if>
																				<xsl:if test="starts-with(  .  , &apos;http&apos; )">
																					<a>
																						<xsl:choose>
																							<xsl:when test="not(string(.))">
																								<xsl:attribute name="href">
																									<xsl:text>#</xsl:text>
																								</xsl:attribute>
																							</xsl:when>
																							<xsl:when test="substring(string(.), 1, 1) = '#'">
																								<xsl:attribute name="href">
																									<xsl:value-of select="."/>
																								</xsl:attribute>
																							</xsl:when>
																							<xsl:otherwise>
																								<xsl:attribute name="href">
																									<xsl:if test="substring(string(.), 2, 1) = ':'">
																										<xsl:text>file:///</xsl:text>
																									</xsl:if>
																									<xsl:value-of select="translate(string(.), '&#x5c;', '/')"/>
																								</xsl:attribute>
																							</xsl:otherwise>
																						</xsl:choose>
																						<span style="font-family:Verdana; font-size:small; ">
																							<xsl:apply-templates/>
																						</span>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																					</a>
																				</xsl:if>
																				<xsl:for-each select="@unit">
																					<span style="font-family:Verdana; font-size:small; ">
																						<xsl:text>&#160;</xsl:text>
																					</span>
																					<span style="font-family:Verdana; font-size:small; ">
																						<xsl:value-of select="string(.)"/>
																					</span>
																					<span>
																						<xsl:text>&#160;</xsl:text>
																					</span>
																				</xsl:for-each>
																			</td>
																		</tr>
																	</xsl:for-each>
																</tbody>
															</table>
														</xsl:if>
													</td>
												</tr>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</div>
					<table width="100%">
						<xsl:variable name="altova:CurrContextGrid_7" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; ">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</td>
								<td/>
							</tr>
							<tr>
								<td style="width:33%; ">
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Relation</xsl:text>
									</span>
								</td>
								<td>
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Object</xsl:text>
									</span>
								</td>
							</tr>
						</tbody>
					</table>
					<hr/>
					<button class="button_4" id="rel_showhide" onclick="toggle( &apos;rel_showhide&apos;,&apos;div_rel&apos;, &apos;Expand&apos;, &apos;Collapse&apos; )">
						<span>
							<xsl:text>Collapse</xsl:text>
						</span>
					</button>
					<div style="display:block; " id="div_rel">
						<table style="color:silver; " width="100%">
							<xsl:variable name="altova:CurrContextGrid_8" select="."/>
							<tbody>
								<xsl:for-each select="$XML">
									<xsl:for-each select="Thing">
										<xsl:for-each select="ObjectProperties">
											<xsl:for-each select="ObjectProperty">
												<tr style="background-color:#f9f9f9; ">
													<td style="width:33%; " valign="top">
														<a>
															<xsl:choose>
																<xsl:when test="not(string(concat(&apos;describe?uri=&apos;,@uri)))">
																	<xsl:attribute name="href">
																		<xsl:text>#</xsl:text>
																	</xsl:attribute>
																</xsl:when>
																<xsl:when test="substring(string(concat(&apos;describe?uri=&apos;,@uri)), 1, 1) = '#'">
																	<xsl:attribute name="href">
																		<xsl:value-of select="concat(&apos;describe?uri=&apos;,@uri)"/>
																	</xsl:attribute>
																</xsl:when>
																<xsl:otherwise>
																	<xsl:attribute name="href">
																		<xsl:if test="substring(string(concat(&apos;describe?uri=&apos;,@uri)), 2, 1) = ':'">
																			<xsl:text>file:///</xsl:text>
																		</xsl:if>
																		<xsl:value-of select="translate(string(concat(&apos;describe?uri=&apos;,@uri)), '&#x5c;', '/')"/>
																	</xsl:attribute>
																</xsl:otherwise>
															</xsl:choose>
															<xsl:for-each select="@name">
																<span style="font-family:Verdana; font-size:small; ">
																	<xsl:value-of select="string(.)"/>
																</span>
															</xsl:for-each>
														</a>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@ns">
															<span style="font-family:Verdana; font-size:xx-small; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="@label">
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:text>(</xsl:text>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:value-of select="string(.)"/>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:text>)</xsl:text>
															</span>
														</xsl:for-each>
													</td>
													<td>
														<xsl:if test="count(Object) &gt; 1">
															<button class="button_4" onclick="toggle( &apos;showobjid&apos;,&apos;divobjid&apos;, &apos;&gt; 1 show&apos;, &apos;hide&apos; )">
																<span id="showobjid">
																	<xsl:text>&gt; 1 show</xsl:text>
																</span>
															</button>
														</xsl:if>
														<xsl:choose>
															<xsl:when test="count(Object) &gt; 1">
																<div style="display:none; " id="divobjid">
																	<xsl:if test="count(Object) &gt; 1">
																		<table>
																			<xsl:variable name="altova:CurrContextGrid_9" select="."/>
																			<tbody>
																				<xsl:for-each select="Object">
																					<tr>
																						<td>
																							<a>
																								<xsl:choose>
																									<xsl:when test="not(string(concat(&apos;describe?&apos;,@uri)))">
																										<xsl:attribute name="href">
																											<xsl:text>#</xsl:text>
																										</xsl:attribute>
																									</xsl:when>
																									<xsl:when test="substring(string(concat(&apos;describe?&apos;,@uri)), 1, 1) = '#'">
																										<xsl:attribute name="href">
																											<xsl:value-of select="concat(&apos;describe?&apos;,@uri)"/>
																										</xsl:attribute>
																									</xsl:when>
																									<xsl:otherwise>
																										<xsl:attribute name="href">
																											<xsl:if test="substring(string(concat(&apos;describe?&apos;,@uri)), 2, 1) = ':'">
																												<xsl:text>file:///</xsl:text>
																											</xsl:if>
																											<xsl:value-of select="translate(string(concat(&apos;describe?&apos;,@uri)), '&#x5c;', '/')"/>
																										</xsl:attribute>
																									</xsl:otherwise>
																								</xsl:choose>
																								<xsl:for-each select="@name">
																									<span style="color:green; font-family:Verdana; font-size:small; ">
																										<xsl:value-of select="string(.)"/>
																									</span>
																								</xsl:for-each>
																							</a>
																							<span>
																								<xsl:text>&#160;</xsl:text>
																							</span>
																							<xsl:for-each select="@label">
																								<span style="font-family:Verdana; font-size:small; ">
																									<xsl:text>(</xsl:text>
																								</span>
																								<span style="color:brown; font-family:Verdana; font-size:small; ">
																									<xsl:value-of select="string(.)"/>
																								</span>
																								<span style="font-family:Verdana; font-size:small; ">
																									<xsl:text>)</xsl:text>
																								</span>
																							</xsl:for-each>
																						</td>
																					</tr>
																				</xsl:for-each>
																			</tbody>
																		</table>
																	</xsl:if>
																</div>
															</xsl:when>
															<xsl:otherwise>
																<xsl:if test="count(Object) &gt; 1">
																	<table>
																		<xsl:variable name="altova:CurrContextGrid_9" select="."/>
																		<tbody>
																			<xsl:for-each select="Object">
																				<tr>
																					<td>
																						<a>
																							<xsl:choose>
																								<xsl:when test="not(string(concat(&apos;describe?&apos;,@uri)))">
																									<xsl:attribute name="href">
																										<xsl:text>#</xsl:text>
																									</xsl:attribute>
																								</xsl:when>
																								<xsl:when test="substring(string(concat(&apos;describe?&apos;,@uri)), 1, 1) = '#'">
																									<xsl:attribute name="href">
																										<xsl:value-of select="concat(&apos;describe?&apos;,@uri)"/>
																									</xsl:attribute>
																								</xsl:when>
																								<xsl:otherwise>
																									<xsl:attribute name="href">
																										<xsl:if test="substring(string(concat(&apos;describe?&apos;,@uri)), 2, 1) = ':'">
																											<xsl:text>file:///</xsl:text>
																										</xsl:if>
																										<xsl:value-of select="translate(string(concat(&apos;describe?&apos;,@uri)), '&#x5c;', '/')"/>
																									</xsl:attribute>
																								</xsl:otherwise>
																							</xsl:choose>
																							<xsl:for-each select="@name">
																								<span style="color:green; font-family:Verdana; font-size:small; ">
																									<xsl:value-of select="string(.)"/>
																								</span>
																							</xsl:for-each>
																						</a>
																						<span>
																							<xsl:text>&#160;</xsl:text>
																						</span>
																						<xsl:for-each select="@label">
																							<span style="font-family:Verdana; font-size:small; ">
																								<xsl:text>(</xsl:text>
																							</span>
																							<span style="color:brown; font-family:Verdana; font-size:small; ">
																								<xsl:value-of select="string(.)"/>
																							</span>
																							<span style="font-family:Verdana; font-size:small; ">
																								<xsl:text>)</xsl:text>
																							</span>
																						</xsl:for-each>
																					</td>
																				</tr>
																			</xsl:for-each>
																		</tbody>
																	</table>
																</xsl:if>
															</xsl:otherwise>
														</xsl:choose>
														<xsl:if test="count(Object) = 1">
															<table>
																<xsl:variable name="altova:CurrContextGrid_10" select="."/>
																<tbody>
																	<xsl:for-each select="Object">
																		<tr>
																			<td>
																				<a>
																					<xsl:choose>
																						<xsl:when test="not(string(concat(&apos;describe?&apos;,@uri)))">
																							<xsl:attribute name="href">
																								<xsl:text>#</xsl:text>
																							</xsl:attribute>
																						</xsl:when>
																						<xsl:when test="substring(string(concat(&apos;describe?&apos;,@uri)), 1, 1) = '#'">
																							<xsl:attribute name="href">
																								<xsl:value-of select="concat(&apos;describe?&apos;,@uri)"/>
																							</xsl:attribute>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:attribute name="href">
																								<xsl:if test="substring(string(concat(&apos;describe?&apos;,@uri)), 2, 1) = ':'">
																									<xsl:text>file:///</xsl:text>
																								</xsl:if>
																								<xsl:value-of select="translate(string(concat(&apos;describe?&apos;,@uri)), '&#x5c;', '/')"/>
																							</xsl:attribute>
																						</xsl:otherwise>
																					</xsl:choose>
																					<xsl:for-each select="@name">
																						<span style="color:green; font-family:Verdana; font-size:small; ">
																							<xsl:value-of select="string(.)"/>
																						</span>
																					</xsl:for-each>
																				</a>
																				<span>
																					<xsl:text>&#160;</xsl:text>
																				</span>
																				<xsl:for-each select="@label">
																					<span style="font-family:Verdana; font-size:small; ">
																						<xsl:text>(</xsl:text>
																					</span>
																					<span style="color:brown; font-family:Verdana; font-size:small; ">
																						<xsl:value-of select="string(.)"/>
																					</span>
																					<span style="font-family:Verdana; font-size:small; ">
																						<xsl:text>)</xsl:text>
																					</span>
																				</xsl:for-each>
																			</td>
																		</tr>
																	</xsl:for-each>
																</tbody>
															</table>
														</xsl:if>
													</td>
												</tr>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</div>
					<table width="100%">
						<xsl:variable name="altova:CurrContextGrid_11" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; ">
									<span>
										<xsl:text>&#160;</xsl:text>
									</span>
								</td>
								<td/>
							</tr>
							<tr>
								<td style="width:33%; ">
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Incoming Relation</xsl:text>
									</span>
								</td>
								<td>
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>Subject</xsl:text>
									</span>
								</td>
							</tr>
						</tbody>
					</table>
					<hr/>
					<button class="button_4" id="inrel_showhide" onclick="toggle( &apos;inrel_showhide&apos;,&apos;div_inrel&apos;, &apos;Expand&apos;, &apos;Collapse&apos; )">
						<span>
							<xsl:text>Collapse</xsl:text>
						</span>
					</button>
					<div style="display:block; " id="div_inrel">
						<table style="color:silver; " width="100%">
							<xsl:variable name="altova:CurrContextGrid_12" select="."/>
							<tbody>
								<xsl:for-each select="$XML">
									<xsl:for-each select="Thing">
										<xsl:for-each select="IncomingRelations">
											<xsl:for-each select="IncomingRelation">
												<tr style="background-color:#f9f9f9; ">
													<td style="width:33%; ">
														<span>
															<xsl:text>is </xsl:text>
														</span>
														<xsl:for-each select="@name">
															<a>
																<xsl:choose>
																	<xsl:when test="not(string(concat(&apos;describe?uri=&apos;,../@uri)))">
																		<xsl:attribute name="href">
																			<xsl:text>#</xsl:text>
																		</xsl:attribute>
																	</xsl:when>
																	<xsl:when test="substring(string(concat(&apos;describe?uri=&apos;,../@uri)), 1, 1) = '#'">
																		<xsl:attribute name="href">
																			<xsl:value-of select="concat(&apos;describe?uri=&apos;,../@uri)"/>
																		</xsl:attribute>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:attribute name="href">
																			<xsl:if test="substring(string(concat(&apos;describe?uri=&apos;,../@uri)), 2, 1) = ':'">
																				<xsl:text>file:///</xsl:text>
																			</xsl:if>
																			<xsl:value-of select="translate(string(concat(&apos;describe?uri=&apos;,../@uri)), '&#x5c;', '/')"/>
																		</xsl:attribute>
																	</xsl:otherwise>
																</xsl:choose>
																<span style="font-family:Verdana; font-size:small; ">
																	<xsl:value-of select="string(.)"/>
																</span>
															</a>
														</xsl:for-each>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="@ns">
															<span style="font-family:Verdana; font-size:xx-small; ">
																<xsl:value-of select="string(.)"/>
															</span>
														</xsl:for-each>
														<xsl:for-each select="@label">
															<span>
																<xsl:text>(</xsl:text>
															</span>
															<span style="font-family:Verdana; font-size:small; ">
																<xsl:value-of select="string(.)"/>
															</span>
															<span>
																<xsl:text>)</xsl:text>
															</span>
														</xsl:for-each>
														<span>
															<xsl:text> of</xsl:text>
														</span>
													</td>
													<td>
														<span>
															<xsl:text>&#160;</xsl:text>
														</span>
														<xsl:for-each select="Subject">
															<a>
																<xsl:choose>
																	<xsl:when test="not(string(concat(&apos;sparql?&apos;,@uri)))">
																		<xsl:attribute name="href">
																			<xsl:text>#</xsl:text>
																		</xsl:attribute>
																	</xsl:when>
																	<xsl:when test="substring(string(concat(&apos;sparql?&apos;,@uri)), 1, 1) = '#'">
																		<xsl:attribute name="href">
																			<xsl:value-of select="concat(&apos;sparql?&apos;,@uri)"/>
																		</xsl:attribute>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:attribute name="href">
																			<xsl:if test="substring(string(concat(&apos;sparql?&apos;,@uri)), 2, 1) = ':'">
																				<xsl:text>file:///</xsl:text>
																			</xsl:if>
																			<xsl:value-of select="translate(string(concat(&apos;sparql?&apos;,@uri)), '&#x5c;', '/')"/>
																		</xsl:attribute>
																	</xsl:otherwise>
																</xsl:choose>
																<xsl:for-each select="@name">
																	<span style="color:green; font-family:Verdana; font-size:small; ">
																		<xsl:value-of select="string(.)"/>
																	</span>
																</xsl:for-each>
															</a>
														</xsl:for-each>
													</td>
												</tr>
											</xsl:for-each>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</tbody>
						</table>
					</div>
					<hr/>
					<span>
						<xsl:text>_GRAPH_FORM_START_</xsl:text>
					</span>
					<br/>
					<table width="100%">
						<xsl:variable name="altova:CurrContextGrid_13" select="."/>
						<tbody>
							<tr>
								<td style="width:33%; ">
									<span style="font-family:Verdana; font-size:medium; ">
										<xsl:text>named graphs</xsl:text>
									</span>
								</td>
								<td>
									<table>
										<xsl:variable name="altova:CurrContextGrid_14" select="."/>
										<tbody>
											<xsl:for-each select="$XML">
												<xsl:for-each select="Thing">
													<xsl:for-each select="Graphs">
														<xsl:for-each select="Graph">
															<tr>
																<td>
																	<xsl:for-each select="@uri">
																		<input name="{.}" value="on" type="checkbox">
																			<xsl:choose>
																				<xsl:when test="string(.)='true'">
																					<xsl:attribute name="checked">checked</xsl:attribute>
																				</xsl:when>
																				<xsl:when test="string(.)='1'">
																					<xsl:attribute name="checked">checked</xsl:attribute>
																				</xsl:when>
																			</xsl:choose>
																		</input>
																	</xsl:for-each>
																	<xsl:for-each select="@name">
																		<a>
																			<xsl:choose>
																				<xsl:when test="not(string(concat(&apos;describe?uri=&apos;,../@uri)))">
																					<xsl:attribute name="href">
																						<xsl:text>#</xsl:text>
																					</xsl:attribute>
																				</xsl:when>
																				<xsl:when test="substring(string(concat(&apos;describe?uri=&apos;,../@uri)), 1, 1) = '#'">
																					<xsl:attribute name="href">
																						<xsl:value-of select="concat(&apos;describe?uri=&apos;,../@uri)"/>
																					</xsl:attribute>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:attribute name="href">
																						<xsl:if test="substring(string(concat(&apos;describe?uri=&apos;,../@uri)), 2, 1) = ':'">
																							<xsl:text>file:///</xsl:text>
																						</xsl:if>
																						<xsl:value-of select="translate(string(concat(&apos;describe?uri=&apos;,../@uri)), '&#x5c;', '/')"/>
																					</xsl:attribute>
																				</xsl:otherwise>
																			</xsl:choose>
																			<span style="color:green; font-family:Verdana; font-size:small; ">
																				<xsl:value-of select="string(.)"/>
																			</span>
																		</a>
																	</xsl:for-each>
																</td>
															</tr>
														</xsl:for-each>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</tbody>
									</table>
								</td>
							</tr>
						</tbody>
					</table>
					<span>
						<xsl:text>_GRAPH_FILTER_INPUT_</xsl:text>
					</span>
					<br/>
					<span>
						<xsl:text>_GRAPH_FORM_END__CLEAR_FILTER_</xsl:text>
					</span>
					<br/>
					<hr/>
					<span>
						<xsl:text>_DELETE_ _EDIT_ _CREATE_INSTANCE_</xsl:text>
					</span>
				</div>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
